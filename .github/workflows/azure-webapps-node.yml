# This workfl<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movies & Lyrics</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
            color: #333;
        }
        header {
            background: #2c3e50;
            color: white;
            padding: 1em 0;
            text-align: center;
        }
        nav {
            display: flex;
            justify-content: center;
            background: #34495e;
        }
        nav a {
            color: white;
            text-decoration: none;
            padding: 1em;
            display: block;
        }
        nav a:hover {
            background: #2c3e50;
        }
        .container {
            padding: 2em;
            max-width: 1200px;
            margin: auto;
        }
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1em;
        }
        .card {
            background: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            text-align: center;
        }
        .card img {
            max-width: 100%;
            display: block;
        }
        .card h3 {
            padding: 1em;
            margin: 0;
        }
        footer {
            background: #2c3e50;
            color: white;
            text-align: center;
            padding: 1em 0;
            margin-top: 2em;
        }
    </style>
</head>
<body>

<header>
    <h1>Movies & Lyrics Hub</h1>
    <p>Your go-to platform for movies and song lyrics, from classics to the latest hits!</p>
</header>

<nav>
    <a href="#home">Home</a>
    <a href="#movies">Movies</a>
    <a href="#lyrics">Song Lyrics</a>
    <a href="#contact">Contact</a>
</nav>

<section id="home" class="container">
    <h2>Welcome to Movies & Lyrics Hub</h2>
    <p>Explore an extensive library of movies and their song lyrics. Whether you're looking for a nostalgic classic or the latest chart-topping hits, we have it all!</p>
</section>

<section id="movies" class="container">
    <h2>Movies</h2>
    <div class="grid">
        <div class="card">
            <img src="https://via.placeholder.com/200" alt="Movie Poster">
            <h3>Movie Title 1</h3>
        </div>
        <div class="card">
            <img src="https://via.placeholder.com/200" alt="Movie Poster">
            <h3>Movie Title 2</h3>
        </div>
        <div class="card">
            <img src="https://via.placeholder.com/200" alt="Movie Poster">
            <h3>Movie Title 3</h3>
        </div>
    </div>
</section>

<section id="lyrics" class="container">
    <h2>Song Lyrics</h2>
    <p>Search for lyrics by movie, artist, or year:</p>
    <input type="text" placeholder="Search for lyrics..." style="width: 100%; padding: 0.5em; margin-bottom: 1em;">
</section>

<section id="contact" class="container">
    <h2>Contact Us</h2>
    <p>Have questions or suggestions? Reach out to us!</p>
    <form>
        <input type="text" placeholder="Your Name" style="width: 100%; padding: 0.5em; margin-bottom: 1em;">
        <input type="email" placeholder="Your Email" style="width: 100%; padding: 0.5em; margin-bottom: 1em;">
        <textarea placeholder="Your Message" style="width: 100%; padding: 0.5em; margin-bottom: 1em;"></textarea>
        <button type="submit" style="background: #34495e; color: white; padding: 0.5em 1em; border: none; cursor: pointer;">Submit</button>
    </form>
</section>

<footer>
    <p>&copy; 2024 Movies & Lyrics Hub. All rights reserved.</p>
</footer>

</body>
</html>ow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
